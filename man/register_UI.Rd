% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deprecated_login_UI.R
\name{register_UI}
\alias{register_UI}
\title{Shiny UI module for registration box}
\usage{
register_UI(id = "login_system", lang = "en", custom_txts = NULL)
}
\arguments{
\item{id}{the id of the module. Defaults to "login_system" for all of the modules contained within the package. If you plan to use serveral login systems inside your app or for any other reason need to change it, remember to keep consistent id for all elements of module.}

\item{lang}{specifies the app used language. Accepts "en" or "pl". Defaults to "en"}

\item{custom_txts}{named list containing customized texts. For more details,
see documentation for 'reglog_txt'. Provided list can contain only elements
used by this function, but it is recommended to provide the same list for
every 'shiny.reglog' function}
}
\value{
'tags$div' containing all elements for registration procedure
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

It need to be used in conjuction with \code{\link[=login_server]{login_server()}} function and is suggested to be used alongside \code{\link[=login_UI]{login_UI()}} and \code{\link[=password_reset_UI]{password_reset_UI()}} for full potential.

This function creates a UI div() element containing informations and input necessary for user to register new account.
As it outputs a div() element, you can put it inside container of your choosing (be it some tabItem, fluidPage, fluidRow etc.)
}
\seealso{
login_server() for more details and example
}
\keyword{internal}
